name: Upload Python Package

on:
  release:
    types: [ published ]

jobs:
  deploy:
    name: Test and Deploy to PyPI

    runs-on: ubuntu-latest

    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"


      - name: Prepare Package Version
        run: |
          sed -i 's/__PACKAGE_VERSION__/${{ github.event.release.tag_name }}/g' src/lib/version.py
          sed -i 's/version = "0.1.0"/version = "${{ github.event.release.tag_name }}"/g' pyproject.toml

      - name: Install poetry
        run: |
          pip install --upgrade pip
          pip install poetry 

      - name: Install dependencies
        run: |
          poetry install

      - name: Create fake tenchi config on Linux and Mac
        run: |
          mkdir -p $HOME/.tenchi
          touch $HOME/.tenchi/config
          echo $'[default]\napi_key = apikey\n' > $HOME/.tenchi/config

      - name: Unit tests
        run: |
          make test

      - name: Generate updated documentation
        run: |
          sudo apt-get install -y pandoc
          rm -f README.md CLI.md README.rst
          make README.rst

      - name: Build and publish to PyPI
        run: |
          poetry config repositories.pypi https://upload.pypi.org/legacy/
          poetry publish --build -r pypi -u __token__ -p ${{ secrets.PYPI_TOKEN }}
